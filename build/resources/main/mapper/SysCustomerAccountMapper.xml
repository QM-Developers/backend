<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qm.backend.mapper.SysCustomerAccountMapper">
  <resultMap id="BaseResultMap" type="com.qm.backend.pojo.SysCustomerAccount">
    <id column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_status" jdbcType="TINYINT" property="accountStatus" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    account_id, account_status, user_id, user_name, customer_id, customer_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_customer_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_customer_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qm.backend.pojo.SysCustomerAccountExample">
    delete from sys_customer_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qm.backend.pojo.SysCustomerAccount">
    insert into sys_customer_account (account_id, account_status, user_id, 
      user_name, customer_id, customer_name
      )
    values (#{accountId,jdbcType=VARCHAR}, #{accountStatus,jdbcType=TINYINT}, #{userId,jdbcType=VARCHAR}, 
      #{userName,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qm.backend.pojo.SysCustomerAccount">
    insert into sys_customer_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qm.backend.pojo.SysCustomerAccountExample" resultType="java.lang.Long">
    select count(*) from sys_customer_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_customer_account
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_customer_account
    set account_id = #{record.accountId,jdbcType=VARCHAR},
      account_status = #{record.accountStatus,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      customer_id = #{record.customerId,jdbcType=VARCHAR},
      customer_name = #{record.customerName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qm.backend.pojo.SysCustomerAccount">
    update sys_customer_account
    <set>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qm.backend.pojo.SysCustomerAccount">
    update sys_customer_account
    set account_status = #{accountStatus,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR},
      customer_name = #{customerName,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>





















  <select id="getUserName" resultType="java.lang.String">
    SELECT user_name
    FROM sys_user
    WHERE user_id = #{userId}
  </select>

  <select id="selectByExample" parameterType="com.qm.backend.pojo.SysCustomerAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_customer_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    LIMIT #{pageNum},#{pageSize}
  </select>

  <insert id="insertTeam">
    INSERT INTO my_team
    (my_team_id,my_team_name,my_team_create_date,
    my_team_area,my_team_address,lat_lng)
    SELECT team_id my_team_id,team_name my_team_name,team_create_date my_team_create_date,
    team_area my_team_area,team_address my_team_address,lat_lng
    FROM sys_customer
    WHERE customer_id = #{custoemrId}
  </insert>

  <insert id="insertDepartment">
    INSERT INTO team_department
    (team_department_id,team_department_name,department_type,
    my_team_id)
    SELECT department_id team_department_id,department_name team_department_name,department_type,
    team_id my_team_id
    FROM sys_customer
    WHERE customer_id = #{custoemrId}
  </insert>

  <insert id="insertUser">
    INSERT INTO user
    (user_id,user_sex,user_name,
    user_phone,user_identity,role_id,
    team_department_id,my_team_id,position_id)
    SELECT customer_id user_id,customer_sex user_sex,customer_name user_name,
    customer_phone user_phone,customer_identity user_identity,role_id,
    department_id,team_id,position_id
    FROM sys_customer
    WHERE customer_id = #{custoemrId}
  </insert>

  <insert id="insertPosition">
    INSERT INTO department_position
    (position_id,position_name,team_department_id)
    SELECT
    position_id,position_name,department_id team_department_id
    FROM sys_customer
    WHERE customer_id = #{custoemrId}
  </insert>

</mapper>