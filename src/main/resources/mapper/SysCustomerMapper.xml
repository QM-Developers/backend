<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qm.backend.mapper.SysCustomerMapper">
  <resultMap id="BaseResultMap" type="com.qm.backend.pojo.SysCustomer">
    <id column="customer_id" jdbcType="VARCHAR" property="customerId" />
    <result column="customer_sex" jdbcType="VARCHAR" property="customerSex" />
    <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
    <result column="customer_phone" jdbcType="VARCHAR" property="customerPhone" />
    <result column="customer_identity" jdbcType="VARCHAR" property="customerIdentity" />
    <result column="team_id" jdbcType="VARCHAR" property="teamId" />
    <result column="team_name" jdbcType="VARCHAR" property="teamName" />
    <result column="team_create_date" jdbcType="TIMESTAMP" property="teamCreateDate" />
    <result column="team_area" jdbcType="VARCHAR" property="teamArea" />
    <result column="team_address" jdbcType="VARCHAR" property="teamAddress" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="department_type" jdbcType="VARCHAR" property="departmentType" />
    <result column="position_id" jdbcType="VARCHAR" property="positionId" />
    <result column="position_name" jdbcType="VARCHAR" property="positionName" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="had_account" jdbcType="TINYINT" property="hadAccount" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    customer_id, customer_sex, customer_name, customer_phone, customer_identity, team_id,
    team_name, team_create_date, team_area, team_address, department_id, department_name,
    department_type, position_id, position_name, user_id, had_account, role_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_customer
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sys_customer
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qm.backend.pojo.SysCustomerExample">
    delete from sys_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qm.backend.pojo.SysCustomer">
    insert into sys_customer (customer_id, customer_sex, customer_name,
    customer_phone, customer_identity, team_id,
    team_name, team_create_date, team_area,
    team_address, department_id, department_name,
    department_type, position_id, position_name,
    user_id, had_account, role_id
    )
    values (#{customerId,jdbcType=VARCHAR}, #{customerSex,jdbcType=VARCHAR}, #{customerName,jdbcType=VARCHAR},
    #{customerPhone,jdbcType=VARCHAR}, #{customerIdentity,jdbcType=VARCHAR}, #{teamId,jdbcType=VARCHAR},
    #{teamName,jdbcType=VARCHAR}, #{teamCreateDate,jdbcType=TIMESTAMP}, #{teamArea,jdbcType=VARCHAR},
    #{teamAddress,jdbcType=VARCHAR}, #{departmentId,jdbcType=VARCHAR}, #{departmentName,jdbcType=VARCHAR},
    #{departmentType,jdbcType=VARCHAR}, #{positionId,jdbcType=VARCHAR}, #{positionName,jdbcType=VARCHAR},
    #{userId,jdbcType=VARCHAR}, #{hadAccount,jdbcType=TINYINT}, #{roleId,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.qm.backend.pojo.SysCustomer">
    insert into sys_customer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        customer_id,
      </if>
      <if test="customerSex != null">
        customer_sex,
      </if>
      <if test="customerName != null">
        customer_name,
      </if>
      <if test="customerPhone != null">
        customer_phone,
      </if>
      <if test="customerIdentity != null">
        customer_identity,
      </if>
      <if test="teamId != null">
        team_id,
      </if>
      <if test="teamName != null">
        team_name,
      </if>
      <if test="teamCreateDate != null">
        team_create_date,
      </if>
      <if test="teamArea != null">
        team_area,
      </if>
      <if test="teamAddress != null">
        team_address,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="departmentName != null">
        department_name,
      </if>
      <if test="departmentType != null">
        department_type,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="positionName != null">
        position_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="hadAccount != null">
        had_account,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="customerId != null">
        #{customerId,jdbcType=VARCHAR},
      </if>
      <if test="customerSex != null">
        #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerIdentity != null">
        #{customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        #{teamId,jdbcType=VARCHAR},
      </if>
      <if test="teamName != null">
        #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamCreateDate != null">
        #{teamCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="teamArea != null">
        #{teamArea,jdbcType=VARCHAR},
      </if>
      <if test="teamAddress != null">
        #{teamAddress,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null">
        #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hadAccount != null">
        #{hadAccount,jdbcType=TINYINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qm.backend.pojo.SysCustomerExample" resultType="java.lang.Long">
    select count(*) from sys_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_customer
    <set>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=VARCHAR},
      </if>
      <if test="record.customerSex != null">
        customer_sex = #{record.customerSex,jdbcType=VARCHAR},
      </if>
      <if test="record.customerName != null">
        customer_name = #{record.customerName,jdbcType=VARCHAR},
      </if>
      <if test="record.customerPhone != null">
        customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.customerIdentity != null">
        customer_identity = #{record.customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="record.teamId != null">
        team_id = #{record.teamId,jdbcType=VARCHAR},
      </if>
      <if test="record.teamName != null">
        team_name = #{record.teamName,jdbcType=VARCHAR},
      </if>
      <if test="record.teamCreateDate != null">
        team_create_date = #{record.teamCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teamArea != null">
        team_area = #{record.teamArea,jdbcType=VARCHAR},
      </if>
      <if test="record.teamAddress != null">
        team_address = #{record.teamAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentName != null">
        department_name = #{record.departmentName,jdbcType=VARCHAR},
      </if>
      <if test="record.departmentType != null">
        department_type = #{record.departmentType,jdbcType=VARCHAR},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=VARCHAR},
      </if>
      <if test="record.positionName != null">
        position_name = #{record.positionName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.hadAccount != null">
        had_account = #{record.hadAccount,jdbcType=TINYINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_customer
    set customer_id = #{record.customerId,jdbcType=VARCHAR},
    customer_sex = #{record.customerSex,jdbcType=VARCHAR},
    customer_name = #{record.customerName,jdbcType=VARCHAR},
    customer_phone = #{record.customerPhone,jdbcType=VARCHAR},
    customer_identity = #{record.customerIdentity,jdbcType=VARCHAR},
    team_id = #{record.teamId,jdbcType=VARCHAR},
    team_name = #{record.teamName,jdbcType=VARCHAR},
    team_create_date = #{record.teamCreateDate,jdbcType=TIMESTAMP},
    team_area = #{record.teamArea,jdbcType=VARCHAR},
    team_address = #{record.teamAddress,jdbcType=VARCHAR},
    department_id = #{record.departmentId,jdbcType=VARCHAR},
    department_name = #{record.departmentName,jdbcType=VARCHAR},
    department_type = #{record.departmentType,jdbcType=VARCHAR},
    position_id = #{record.positionId,jdbcType=VARCHAR},
    position_name = #{record.positionName,jdbcType=VARCHAR},
    user_id = #{record.userId,jdbcType=VARCHAR},
    had_account = #{record.hadAccount,jdbcType=TINYINT},
    role_id = #{record.roleId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qm.backend.pojo.SysCustomer">
    update sys_customer
    <set>
      <if test="customerSex != null">
        customer_sex = #{customerSex,jdbcType=VARCHAR},
      </if>
      <if test="customerName != null">
        customer_name = #{customerName,jdbcType=VARCHAR},
      </if>
      <if test="customerPhone != null">
        customer_phone = #{customerPhone,jdbcType=VARCHAR},
      </if>
      <if test="customerIdentity != null">
        customer_identity = #{customerIdentity,jdbcType=VARCHAR},
      </if>
      <if test="teamId != null">
        team_id = #{teamId,jdbcType=VARCHAR},
      </if>
      <if test="teamName != null">
        team_name = #{teamName,jdbcType=VARCHAR},
      </if>
      <if test="teamCreateDate != null">
        team_create_date = #{teamCreateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="teamArea != null">
        team_area = #{teamArea,jdbcType=VARCHAR},
      </if>
      <if test="teamAddress != null">
        team_address = #{teamAddress,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="departmentType != null">
        department_type = #{departmentType,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=VARCHAR},
      </if>
      <if test="positionName != null">
        position_name = #{positionName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="hadAccount != null">
        had_account = #{hadAccount,jdbcType=TINYINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qm.backend.pojo.SysCustomer">
    update sys_customer
    set customer_sex = #{customerSex,jdbcType=VARCHAR},
    customer_name = #{customerName,jdbcType=VARCHAR},
    customer_phone = #{customerPhone,jdbcType=VARCHAR},
    customer_identity = #{customerIdentity,jdbcType=VARCHAR},
    team_id = #{teamId,jdbcType=VARCHAR},
    team_name = #{teamName,jdbcType=VARCHAR},
    team_create_date = #{teamCreateDate,jdbcType=TIMESTAMP},
    team_area = #{teamArea,jdbcType=VARCHAR},
    team_address = #{teamAddress,jdbcType=VARCHAR},
    department_id = #{departmentId,jdbcType=VARCHAR},
    department_name = #{departmentName,jdbcType=VARCHAR},
    department_type = #{departmentType,jdbcType=VARCHAR},
    position_id = #{positionId,jdbcType=VARCHAR},
    position_name = #{positionName,jdbcType=VARCHAR},
    user_id = #{userId,jdbcType=VARCHAR},
    had_account = #{hadAccount,jdbcType=TINYINT},
    role_id = #{roleId,jdbcType=INTEGER}
    where customer_id = #{customerId,jdbcType=VARCHAR}
  </update>












  <select id="selectByExample" parameterType="com.qm.backend.pojo.SysCustomerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_customer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    LIMIT #{pageNum},#{pageSize}
  </select>

</mapper>