<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qm.backend.mapper.InterfaceInfoMapper">
  <resultMap id="BaseResultMap" type="com.qm.backend.pojo.InterfaceInfo">
    <id column="info_id" jdbcType="VARCHAR" property="infoId" />
    <result column="info_name" jdbcType="VARCHAR" property="infoName" />
    <result column="info_path" jdbcType="VARCHAR" property="infoPath" />
    <result column="info_method" jdbcType="VARCHAR" property="infoMethod" />
    <result column="into_format" jdbcType="VARCHAR" property="intoFormat" />
    <result column="info_remark" jdbcType="VARCHAR" property="infoRemark" />
    <result column="request_example" jdbcType="VARCHAR" property="requestExample" />
    <result column="response_example" jdbcType="VARCHAR" property="responseExample" />
    <result column="type_id" jdbcType="VARCHAR" property="typeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    info_id, info_name, info_path, info_method, into_format, info_remark, request_example, 
    response_example, type_id
  </sql>
  <select id="selectByExample" parameterType="com.qm.backend.pojo.InterfaceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interface_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from interface_info
    where info_id = #{infoId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from interface_info
    where info_id = #{infoId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qm.backend.pojo.InterfaceInfoExample">
    delete from interface_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qm.backend.pojo.InterfaceInfo">
    insert into interface_info (info_id, info_name, info_path, 
      info_method, into_format, info_remark, 
      request_example, response_example, type_id
      )
    values (#{infoId,jdbcType=VARCHAR}, #{infoName,jdbcType=VARCHAR}, #{infoPath,jdbcType=VARCHAR}, 
      #{infoMethod,jdbcType=VARCHAR}, #{intoFormat,jdbcType=VARCHAR}, #{infoRemark,jdbcType=VARCHAR}, 
      #{requestExample,jdbcType=VARCHAR}, #{responseExample,jdbcType=VARCHAR}, #{typeId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qm.backend.pojo.InterfaceInfo">
    insert into interface_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        info_id,
      </if>
      <if test="infoName != null">
        info_name,
      </if>
      <if test="infoPath != null">
        info_path,
      </if>
      <if test="infoMethod != null">
        info_method,
      </if>
      <if test="intoFormat != null">
        into_format,
      </if>
      <if test="infoRemark != null">
        info_remark,
      </if>
      <if test="requestExample != null">
        request_example,
      </if>
      <if test="responseExample != null">
        response_example,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        #{infoId,jdbcType=VARCHAR},
      </if>
      <if test="infoName != null">
        #{infoName,jdbcType=VARCHAR},
      </if>
      <if test="infoPath != null">
        #{infoPath,jdbcType=VARCHAR},
      </if>
      <if test="infoMethod != null">
        #{infoMethod,jdbcType=VARCHAR},
      </if>
      <if test="intoFormat != null">
        #{intoFormat,jdbcType=VARCHAR},
      </if>
      <if test="infoRemark != null">
        #{infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="requestExample != null">
        #{requestExample,jdbcType=VARCHAR},
      </if>
      <if test="responseExample != null">
        #{responseExample,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qm.backend.pojo.InterfaceInfoExample" resultType="java.lang.Long">
    select count(*) from interface_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update interface_info
    <set>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=VARCHAR},
      </if>
      <if test="record.infoName != null">
        info_name = #{record.infoName,jdbcType=VARCHAR},
      </if>
      <if test="record.infoPath != null">
        info_path = #{record.infoPath,jdbcType=VARCHAR},
      </if>
      <if test="record.infoMethod != null">
        info_method = #{record.infoMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.intoFormat != null">
        into_format = #{record.intoFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.infoRemark != null">
        info_remark = #{record.infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.requestExample != null">
        request_example = #{record.requestExample,jdbcType=VARCHAR},
      </if>
      <if test="record.responseExample != null">
        response_example = #{record.responseExample,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update interface_info
    set info_id = #{record.infoId,jdbcType=VARCHAR},
      info_name = #{record.infoName,jdbcType=VARCHAR},
      info_path = #{record.infoPath,jdbcType=VARCHAR},
      info_method = #{record.infoMethod,jdbcType=VARCHAR},
      into_format = #{record.intoFormat,jdbcType=VARCHAR},
      info_remark = #{record.infoRemark,jdbcType=VARCHAR},
      request_example = #{record.requestExample,jdbcType=VARCHAR},
      response_example = #{record.responseExample,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qm.backend.pojo.InterfaceInfo">
    update interface_info
    <set>
      <if test="infoName != null">
        info_name = #{infoName,jdbcType=VARCHAR},
      </if>
      <if test="infoPath != null">
        info_path = #{infoPath,jdbcType=VARCHAR},
      </if>
      <if test="infoMethod != null">
        info_method = #{infoMethod,jdbcType=VARCHAR},
      </if>
      <if test="intoFormat != null">
        into_format = #{intoFormat,jdbcType=VARCHAR},
      </if>
      <if test="infoRemark != null">
        info_remark = #{infoRemark,jdbcType=VARCHAR},
      </if>
      <if test="requestExample != null">
        request_example = #{requestExample,jdbcType=VARCHAR},
      </if>
      <if test="responseExample != null">
        response_example = #{responseExample,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qm.backend.pojo.InterfaceInfo">
    update interface_info
    set info_name = #{infoName,jdbcType=VARCHAR},
      info_path = #{infoPath,jdbcType=VARCHAR},
      info_method = #{infoMethod,jdbcType=VARCHAR},
      into_format = #{intoFormat,jdbcType=VARCHAR},
      info_remark = #{infoRemark,jdbcType=VARCHAR},
      request_example = #{requestExample,jdbcType=VARCHAR},
      response_example = #{responseExample,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=VARCHAR}
    where info_id = #{infoId,jdbcType=VARCHAR}
  </update>
</mapper>