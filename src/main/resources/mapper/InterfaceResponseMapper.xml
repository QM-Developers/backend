<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qm.backend.mapper.InterfaceResponseMapper">
  <resultMap id="BaseResultMap" type="com.qm.backend.pojo.InterfaceResponse">
    <id column="response_id" jdbcType="VARCHAR" property="responseId" />
    <result column="response_name" jdbcType="VARCHAR" property="responseName" />
    <result column="response_type" jdbcType="VARCHAR" property="responseType" />
    <result column="response_text" jdbcType="VARCHAR" property="responseText" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="info_id" jdbcType="VARCHAR" property="infoId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    response_id, response_name, response_type, response_text, sort, info_id
  </sql>
  <select id="selectByExample" parameterType="com.qm.backend.pojo.InterfaceResponseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interface_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from interface_response
    where response_id = #{responseId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from interface_response
    where response_id = #{responseId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.qm.backend.pojo.InterfaceResponseExample">
    delete from interface_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qm.backend.pojo.InterfaceResponse">
    insert into interface_response (response_id, response_name, response_type, 
      response_text, sort, info_id
      )
    values (#{responseId,jdbcType=VARCHAR}, #{responseName,jdbcType=VARCHAR}, #{responseType,jdbcType=VARCHAR}, 
      #{responseText,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{infoId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qm.backend.pojo.InterfaceResponse">
    insert into interface_response
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="responseId != null">
        response_id,
      </if>
      <if test="responseName != null">
        response_name,
      </if>
      <if test="responseType != null">
        response_type,
      </if>
      <if test="responseText != null">
        response_text,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="infoId != null">
        info_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="responseId != null">
        #{responseId,jdbcType=VARCHAR},
      </if>
      <if test="responseName != null">
        #{responseName,jdbcType=VARCHAR},
      </if>
      <if test="responseType != null">
        #{responseType,jdbcType=VARCHAR},
      </if>
      <if test="responseText != null">
        #{responseText,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qm.backend.pojo.InterfaceResponseExample" resultType="java.lang.Long">
    select count(*) from interface_response
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update interface_response
    <set>
      <if test="record.responseId != null">
        response_id = #{record.responseId,jdbcType=VARCHAR},
      </if>
      <if test="record.responseName != null">
        response_name = #{record.responseName,jdbcType=VARCHAR},
      </if>
      <if test="record.responseType != null">
        response_type = #{record.responseType,jdbcType=VARCHAR},
      </if>
      <if test="record.responseText != null">
        response_text = #{record.responseText,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update interface_response
    set response_id = #{record.responseId,jdbcType=VARCHAR},
      response_name = #{record.responseName,jdbcType=VARCHAR},
      response_type = #{record.responseType,jdbcType=VARCHAR},
      response_text = #{record.responseText,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      info_id = #{record.infoId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qm.backend.pojo.InterfaceResponse">
    update interface_response
    <set>
      <if test="responseName != null">
        response_name = #{responseName,jdbcType=VARCHAR},
      </if>
      <if test="responseType != null">
        response_type = #{responseType,jdbcType=VARCHAR},
      </if>
      <if test="responseText != null">
        response_text = #{responseText,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="infoId != null">
        info_id = #{infoId,jdbcType=VARCHAR},
      </if>
    </set>
    where response_id = #{responseId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qm.backend.pojo.InterfaceResponse">
    update interface_response
    set response_name = #{responseName,jdbcType=VARCHAR},
      response_type = #{responseType,jdbcType=VARCHAR},
      response_text = #{responseText,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      info_id = #{infoId,jdbcType=VARCHAR}
    where response_id = #{responseId,jdbcType=VARCHAR}
  </update>
</mapper>